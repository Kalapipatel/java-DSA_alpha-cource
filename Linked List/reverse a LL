class linkedlist {
    public static class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public static Node head;
    public static Node tail;
    public static int size;

    public void addLast(int data) {
        Node newNode = new Node(data);
        size++;
        if (head == null) {
            head = tail = newNode;
            return;
        }
        tail.next = newNode;
        tail = newNode;
    }

    public void print() {
        Node temp = head;

        for (int i = 0; i < size; i++) {
            System.out.print(temp.data + "->");
            temp = temp.next;
        }
        System.out.println("null");
    }

    public int removlast() {
        if (size == 0) {
            System.out.println("ll is empty");
            return -1;
        } else if (size == 1) {
            int val = tail.data;
            head = tail = null;
            size--;
            return val;
        }
        Node temp = head;
        for (int i = 0; i < size - 2; i++) {
            temp = temp.next;
        }
        int val = tail.data;
        temp.next = null;
        tail = temp;
        size--;
        return val;
    }

    public static void main(String[] args) {
        linkedlist ll = new linkedlist();
        ll.addLast(1);
        ll.addLast(2);
        ll.addLast(3);
        ll.addLast(4);
        ll.addLast(5);

        // ll.removlast();
        Node temp = head;

        int arr[] = new int[size];
        arr[size - 1] = tail.data;

        for (int i = 0; i < size - 1; i++) {
            arr[i] = temp.data;
            temp = temp.next;
        }

        ll.print();
        for (int i = 0; i < arr.length; i++) {
            ll.removlast();
        }

        for (int i = arr.length - 1; i >= 0; i--) {
            ll.addLast(arr[i]);
        }
        ll.print();

    }
}
